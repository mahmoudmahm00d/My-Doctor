@model FinalProject.ViewModels.SignUpDoctorViewModel

@{
    Layout = "~/Views/Shared/_Empty.cshtml";
    ViewBag.Title = "Sign Up";
}

<div class="container pt-5">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="ml-auto pt-4">

            <h2 class="text-color-primary"> انشاء حساب</h2>
            <div class="form-row">
                <div class="col-lg-3 col-md-6">
                    @Html.EditorFor(model => model.Doctor.FirstName, new { htmlAttributes = new { @class = "form-control  round-this m-1 shadow", @placeholder = "*الاسم" } })
                    @Html.ValidationMessageFor(model => model.Doctor.FirstName, "", new { @class = "text-danger" })
                </div>

                <div class="col-lg-3 col-md-6">
                    @Html.EditorFor(model => model.Doctor.FatherName, new { htmlAttributes = new { @class = "form-control  round-this m-1 shadow", @placeholder = "اسم الاب" } })
                    @Html.ValidationMessageFor(model => model.Doctor.FatherName, "", new { @class = "text-danger" })
                </div>

                <div class="col-lg-3 col-md-6">
                    @Html.EditorFor(model => model.Doctor.LastName, new { htmlAttributes = new { @class = "form-control  round-this m-1 shadow", @placeholder = "الكنية*" } })
                    @Html.ValidationMessageFor(model => model.Doctor.LastName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-row">
                <div class="col-lg-3 col-md-6">
                    @Html.EditorFor(model => model.Doctor.Birth, new { htmlAttributes = new { @class = "form-control  round-this m-1 shadow", @placeholder = "*تاريخ الميلاد" } })
                    @Html.ValidationMessageFor(model => model.Doctor.Birth, "", new { @class = "text-danger" })
                </div>

                <div class="col-lg-3 col-md-6">
                    @Html.EnumDropDownListFor(model => model.Doctor.Gender, htmlAttributes: new { @class = "form-control round-this shadow" })
                    @Html.ValidationMessageFor(model => model.Doctor.Gender, "", new { @class = "text-danger" })
                </div>
            </div>

            <hr class="w-25" />

            <div class="form-row">
                <div class="col-lg-3 col-md-6">
                    @Html.EditorFor(model => model.Doctor.UserPhone, new { htmlAttributes = new { @class = "form-control round-this m-1 shadow",@type="tel", @placeholder = "*رقم الهاتف", @pattern = "\\+9639[0-9]{8}" } })
                    @Html.ValidationMessageFor(model => model.Doctor.UserPhone, "", new { @class = "text-danger" })
                </div>
                <div class="col-lg-3 col-md-6">

                    @Html.EditorFor(model => model.Doctor.UserEmail, new { htmlAttributes = new { @class = "form-control round-this m-1 shadow", @placeholder = "*البريد الإلكتروني" ,@type = "email"} })
                    @Html.ValidationMessageFor(model => model.Doctor.UserEmail, "", new { @class = "text-danger" })
                </div>
                <div class="col-lg-3 col-md-6">
                    @Html.DropDownListFor(model => model.Doctor.UserTypeId, new SelectList(Model.UserTypes, "UserTypeId", "UserTypeName"), "Select Type", new { @class = "form-control round-this shadow" })
                    @Html.ValidationMessageFor(model => model.Doctor.UserTypeId, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-row">
                <div class="col-lg-3 col-md-6">
                    @Html.EditorFor(model => model.Doctor.UserPassword, new { htmlAttributes = new { @class = "form-control  round-this m-1 shadow", @placeholder = "كلمة المرور*" ,@type = "password"} })
                    @Html.ValidationMessageFor(model => model.Doctor.UserPassword, "", new { @class = "text-danger" })
                </div>

                <div class="col-lg-3 col-md-6">
                    @Html.EditorFor(model => model.Doctor.ConfirmPassword, new { htmlAttributes = new { @class = "form-control  round-this m-1 shadow", @placeholder = "*تأكيد كلمة المرور", @type = "password" } })
                    @Html.ValidationMessageFor(model => model.Doctor.ConfirmPassword, "", new { @class = "text-danger" })
                </div>
            </div>

            <hr class="w-25" />

            @Html.ValidationSummary(true, "", new { @class = "text-danger text-right" })

            <div class="form-inline">
                <input type="submit" value="انشئ حساب" class="btn btn-default col-lg-3 col-md-6 background-color-primary round-this" />
            </div>
        </div>
    }

        <div class="ml-auto pt-4">
            <p class="text-secondary">
                *ملاحظة: يرجى ادخال رقم هاتف من الشكل   +9639xxxxxxxx
            </p>
        </div>

</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}


